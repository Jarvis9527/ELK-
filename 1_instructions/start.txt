Getting Started
开始：
Elasticsearch是高度可伸缩的开源全文搜索和分析引擎。它允许您存储、搜索和分析大容量的数据快速、实时在附近。通常用作底层引擎/技术力量有复杂的搜索功能和需求的应用程序。
下面是一些示例用例Elasticsearch可用于:

(1):你运行一个在线网络商店,你让你的客户找你卖的产品。在这种情况下,您可以使用Elasticsearch存储你的整个产品目录和库存,为他们提供搜索和自动完成建议。

(2):你想收集日志或事务数据,你想寻找趋势分析和挖掘这些数据,统计、汇总时,或异常。在这种情况下,您可以使用Logstash(Elasticsearch / Logstash / Kibana栈的一部分)收集、汇总,并解析数据,然后Logstash Elasticsearch养活这些数据。在Elasticsearch数据之后,您可以运行搜索和聚合和我感兴趣的你的任何信息。

(3):你运行一个价格报警平台允许price-savvy客户指定一个规则就像“我购买一个特定的电子产品感兴趣,我希望得到通知如果产品的价格低于$ X的任何供应商在下个月”。在这种情况下你可以刮供应商价格,将他们推向Elasticsearch并使用它的反向搜索(过滤器)能力匹配价格变动对客户查询和最终将警报发送到客户一旦找到匹配项

(4):你分析/商业情报需求和想要迅速调查,分析、可视化和问特别的问题在很多数据(认为数百万或数十亿条记录)。在这种情况下,您可以使用Elasticsearch存储您的数据,然后使用Kibana(Elasticsearch / Logstash / Kibana栈的一部分)来构建自定义仪表板可以可视化方面的数据,对你来说很重要。此外,您可以使用Elasticsearch聚合功能来执行复杂的商业智能查询您的数据。

在本教程的其余部分,我将指导您完成在Elasticsearch启动和运行的过程中,peek在里面,和执行基本的操作,比如索引、搜索和修改你的数据。在本教程中,您应该有一个好主意的Elasticsearch是什么,它是如何工作的,希望受到启发,看看您可以使用它来构建复杂的搜索应用程序或从你的数据我的情报。

Basic Concepts: 基本概念
有一些概念是Elasticsearch核心。理解这些概念从一开始就将极大缓解学习过程。

Near Realtime (NRT):实时(NRT)附近
Elasticsearch近乎实时的搜索平台。这意味着有一个轻微的延迟(通常1秒)时间索引文档,直到变得可搜索的时间。

Cluster: 集群
集群是一组一个或多个节点(服务器)联合在一起会握着你的全部数据,提供索引和搜索功能在所有节点。集群是由一个唯一的名称,默认是“elasticsearch”。这个名字是很重要的,因为一个节点只能是集群的一部分,如果节点设置加入集群的名称

确保你不重用相同的集群名称在不同的环境中,否则你可能会最终加入了集群节点。例如你可以使用logging-dev、logging-stage
logging-prod发展,过渡和生产集群。

注意它是有效的,完全可以与只有一个集群节点。此外,你也可以有多个独立集群每个国家都有自己独特的集群名称。

node: 节点
一个节点是一个服务器集群的一部分,存储您的数据,并参与集群的索引和搜索功能。就像一个集群,一个节点是由一个名字标识,默认情况下是一个随机奇迹人物名称分配给节点在启动。您可以定义任何你想要的节点名称,如果你不希望默认。这个名字是重要的管理目的,你想确定哪些服务器在您的网络中哪些节点对应Elasticsearch集群。

一个节点可以加入一个特定的配置集群的集群名称。默认情况下,每个节点设置加入集群命名elasticsearch这意味着如果你启动一个网络上的节点数量,并假定他们可以发现每个时候—都将自动形成并加入单个集群elasticsearch命名。

在一个集群中,你可以拥有你想要尽可能多的节点。此外,如果没有其他Elasticsearch目前节点上运行您的网络,从单个节点将默认情况下成立一个新的名为Elasticsearch单节点集群。



index: 指数
索引文件的集合,有类似的特点。例如,您可以对客户数据索引,另一个指数产品目录,但订单数据的另一个指标。索引是由一个名字标识(必须所有小写),这个名字是指该指数在执行索引、搜索、更新和删除操作的文件。

在一个集群中,您可以定义你想要尽可能多的索引。


type: 类型
在索引中,您可以定义一个或多个类型。类型是一个逻辑类别/分区索引的语义是完全取决于你。一般来说,一种是为文档定义一组共同的领域。例如,让我们假设您运行一个博客平台,将你所有的数据存储在一个指数。在这个索引,你可以定义一个类型为用户数据,另一种类型的博客数据,但评论数据的另一种类型。

Document: 文档
文档的基本单元可以被索引的信息。例如,您可以有一个文档为一个客户,一个产品的另一个文档,另一个订单。本文以JSON(JavaScript对象表示法)表示这是一个无处不在的互联网数据交换格式。

在索引/类型,你可以将你想要尽可能多的文件。注意,尽管一个文档身体驻留在一个索引,一个文档实际上必须被索引/分配给内部索引类型


Shards & Replicas： 副本和碎片
索引可以存储大量的数据,可以超过单个节点的硬件限制。例如,单个索引十亿个文档占用1
tb的磁盘空间可能不适合在磁盘上的一个节点或可能过于缓慢,仅从单个节点搜索请求服务。

为了解决这个问题,Elasticsearch能够索引细分成多个块碎片。当您创建索引时,您可以简单地定义你想要的碎片数量。每个切分本身就是一个全功能和独立的“指数”,可以托管在集群中的任何节点

切分是重要的有两个主要原因:
*它允许您水平分割体积/扩展内容
*它允许您分发和并行化操作在碎片(可能在多个节点)从而增加性能和吞吐量

碎片是如何分布的机制以及其文档是如何聚合回搜索请求是完全由Elasticsearch管理,作为用户是透明的。

在网络/云环境,失败随时可以预计,它是非常有用的,强烈推荐碎片/节点故障转移机制,以防脱机或消失不管出于什么原因。为此,Elasticsearch允许你做出一个或多个索引碎片的复制到所谓的复制碎片,或简称为副本。

Replication is important for two primary reasons:复制是重要的有两个主要原因:

*它提供了高可用性,以防碎片/节点失败。出于这个原因,重要的是要注意,一个复制碎片是永远不会分配在同一节点与原始/主碎片是抄袭。
*它允许您扩展您的搜索量/吞吐量,因为搜索可以在所有副本并行执行。

总而言之,每个索引可以分成多个碎片。索引也可以复制零(即没有副本)或更多次。一旦复制,每个索引将主碎片(复制的原始碎片)和复制碎片(主碎片的副本)。碎片的数量和副本可以定义每个索引创建索引。创建索引之后,您可能会改变随时动态副本的数量,但你不能改变事后的碎片数量

默认情况下,每个索引分配Elasticsearch
5主碎片和1副本这意味着如果你在集群中,至少有两个节点索引将有5个主碎片和另一个5复制碎片(1完成副本)总共10碎片/索引。


每个Elasticsearch碎片是一个Lucene索引。有最大数量的文件你可以在一个Lucene索引。lucene
- 5843,极限是2147483519(=整数。MAX_VALUE -
  128)文件。您可以监视碎片大小使用_cat /碎片api。
有了这些方法,让我们开始与有趣的部分…















